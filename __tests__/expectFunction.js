import { expectFunction as expFn } from '../src';
import * as test from '../test-utils';

test._nan(expFn, new TypeError('Expected function, got NaN'));
test._plusInfinity(expFn, new TypeError('Expected function, got infinity'));
test._minusInfinity(expFn, new TypeError('Expected function, got infinity'));
test._undefined(expFn, new TypeError('Expected function, got undefined'));
test._null(expFn, new TypeError('Expected function, got null'));
test._true(expFn, new TypeError('Expected function, got boolean'));
test._false(expFn, new TypeError('Expected function, got boolean'));
test._function(expFn, 'itself');
test._number(expFn, new TypeError('Expected function, got number'));
test._object(expFn, new TypeError('Expected function, got object'));
test._string(expFn, new TypeError('Expected function, got string'));
test._symbol(expFn, new TypeError('Expected function, got symbol'));
test._integer(expFn, new TypeError('Expected function, got number'));
test._array(expFn, new TypeError('Expected function, got object'));
test._typedArray(expFn, new TypeError('Expected function, got object'));
test._map(expFn, new TypeError('Expected function, got object'));
test._set(expFn, new TypeError('Expected function, got object'));
